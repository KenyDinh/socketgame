/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package game.client.gui;

import game.client.common.CommonDefine;
import game.client.common.CommonMethod;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.util.Map;

/**
 *
 * @author KenyDinh
 */
public class WelcomeClient extends javax.swing.JFrame {

    private static WelcomeClient welcome;

    private String host;
    private Integer port;
    private Map<String, String> mapConfig;

    /**
     * Creates new form WelcomeClient
     */
    public WelcomeClient() {
        initComponents();
        this.setResizable(false);
        CommonMethod.setLocationFrame(this);
        setIconImage(new javax.swing.ImageIcon(getClass().getResource("/game/client/iconImage/client.png")).getImage());
        validConfigFile();
    }

    public static WelcomeClient getWelcome() {
        if (welcome == null) {
            welcome = new WelcomeClient();
        }
        return welcome;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        title = new javax.swing.JLabel();
        tf_username = new javax.swing.JTextField();
        btn_start = new javax.swing.JButton();
        lable_username = new javax.swing.JLabel();
        error = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Welcome");

        title.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        title.setForeground(new java.awt.Color(0, 51, 204));
        title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title.setText("MiniGame Client");

        tf_username.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tf_usernameKeyPressed(evt);
            }
        });

        btn_start.setText("Start");
        btn_start.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_startActionPerformed(evt);
            }
        });

        lable_username.setText("Username");

        error.setFont(new java.awt.Font("Times New Roman", 0, 15)); // NOI18N
        error.setForeground(new java.awt.Color(255, 0, 51));
        error.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(title, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(164, 164, 164)
                .addComponent(btn_start)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(100, Short.MAX_VALUE)
                .addComponent(lable_username)
                .addGap(18, 18, 18)
                .addComponent(tf_username, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(100, 100, 100))
            .addComponent(error, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(title)
                .addGap(10, 10, 10)
                .addComponent(error)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tf_username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lable_username))
                .addGap(15, 15, 15)
                .addComponent(btn_start)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_startActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_startActionPerformed
        String name = tf_username.getText();
        if (name == null) {
            error.setForeground(Color.red);
            error.setText("Vui lòng nhập tên của bạn!");
            return;
        }
        if (!name.matches("\\w+")) {
            error.setForeground(Color.red);
            error.setText("Invalid!!!");
            return;
        }
        if (name.trim().length() > 16 || name.trim().length() < 3) {
            error.setForeground(Color.red);
            error.setText("Tên phải có từ 3 đến 16 ký tự!");
            return;
        }
        mapConfig.put(CommonDefine.USERNAME_KEY, name.trim());
        mapConfig.put(CommonDefine.VALID_CONTENT_VALUE, String.valueOf(0));
        if (!CommonMethod.createFileWithContent(CommonDefine.CONFIG_FILE_NAME, CommonMethod.formatMapToContentFile(mapConfig))) {
            error.setForeground(Color.red);
            error.setText("Unknow error!");
            return;
        }
        ClientFrame.getClientFrame().connectToServer(host, port, name.trim(), CommonMethod.getMACAddress());
        mapConfig.put(CommonDefine.VALID_CONTENT_VALUE, String.valueOf(1));
        ClientFrame.getClientFrame().setMapConfig(mapConfig);
        this.dispose();
    }//GEN-LAST:event_btn_startActionPerformed

    private void tf_usernameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_usernameKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            btn_startActionPerformed(null);
        }
    }//GEN-LAST:event_tf_usernameKeyPressed

    private void validConfigFile() {
        String err = isValidConfigFile();
        if (err != null) {
            btn_start.setEnabled(false);
            tf_username.setEditable(false);
            error.setText(err);
            new Thread(() -> {
                try {
                    Thread.sleep(2000);
                    System.exit(0);
                } catch (InterruptedException ex) {
                }
            }).start();
        }
    }

    private String isValidConfigFile() {
        mapConfig = CommonMethod.getConfigKeyValue();
        String err = "The config file is invalid!";
        if (mapConfig.isEmpty()) {
            return err;
        }
        if (!mapConfig.containsKey(CommonDefine.VALID_CONTENT_KEY) || !mapConfig.containsKey(CommonDefine.VALID_CONTENT_VALUE) || !mapConfig.containsKey(CommonDefine.HOST_SERVER_KEY) || !mapConfig.containsKey(CommonDefine.POST_SERVER_KEY)) {
            return err;
        }
        if (!CommonMethod.isNumberic(mapConfig.get(CommonDefine.VALID_CONTENT_KEY))) {
            return err;
        }
        if (!CommonMethod.isNumberic(mapConfig.get(CommonDefine.VALID_CONTENT_VALUE))) {
            return err;
        }
        if (!CommonMethod.isNumberic(mapConfig.get(CommonDefine.POST_SERVER_KEY))) {
            return err;
        }
        if (Integer.parseInt(mapConfig.get(CommonDefine.VALID_CONTENT_KEY)) != 1) {
            return err;
        }
        if (Integer.parseInt(mapConfig.get(CommonDefine.VALID_CONTENT_VALUE)) != 1) {
            return "This program is still running!";
        }
        host = mapConfig.get(CommonDefine.HOST_SERVER_KEY);
        port = Integer.parseInt(mapConfig.get(CommonDefine.POST_SERVER_KEY));
        if (port < 1234) {
            return err;
        }
        if (mapConfig.get(CommonDefine.USERNAME_KEY) != null && mapConfig.get(CommonDefine.USERNAME_KEY).length() > 0) {
            error.setForeground(Color.blue);
            error.setText("Welcome " + mapConfig.get(CommonDefine.USERNAME_KEY));
            tf_username.setText(mapConfig.get(CommonDefine.USERNAME_KEY));
            tf_username.setEditable(false);
        }
        return null;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(WelcomeClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(WelcomeClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(WelcomeClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(WelcomeClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        new WelcomeClient().setVisible(true);
        //WelcomeClient.getWelcome().setVisible(true);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_start;
    private javax.swing.JLabel error;
    private javax.swing.JLabel lable_username;
    private javax.swing.JTextField tf_username;
    private javax.swing.JLabel title;
    // End of variables declaration//GEN-END:variables
}
