/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package game.client.gui;

import game.client.common.CommonDefine;
import game.client.element.Equipment;
import game.client.element.ItemCategory;
import game.client.socket.BoomGameClient;
import java.awt.Color;
import java.awt.Graphics;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author tkv-nhukhanhdinh
 */
public class ShopItem extends javax.swing.JFrame {

    private int itemSelectedIndex = -1;
    private Equipment selectedItem = null;
    private int itemPrice = 0;
    private List<Equipment> listEquipment;

    /**
     * Creates new form ShopItem
     *
     */
    public ShopItem() {
        initComponents();
        initListItem();
        updateCoint();
        setIconImage(new javax.swing.ImageIcon(getClass().getResource("/game/client/iconImage/shop.png")).getImage());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        leftPanel = new javax.swing.JPanel();
        scrollItemList = new javax.swing.JScrollPane();
        listItem = new javax.swing.JList<>();
        rightPanel = new javax.swing.JPanel();
        scrollDesItem = new javax.swing.JScrollPane();
        descrip = new javax.swing.JTextArea();
        imgPanel = new javax.swing.JPanel();
        spinCount = new javax.swing.JSpinner();
        btnBuy = new javax.swing.JButton();
        priceCount = new javax.swing.JLabel();
        topPanel = new javax.swing.JPanel();
        lbTotalCoin = new javax.swing.JLabel();
        btnOk = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Shop");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        listItem.setBackground(new java.awt.Color(204, 204, 204));
        listItem.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        listItem.setForeground(new java.awt.Color(0, 153, 102));
        listItem.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listItem.setSelectionBackground(new java.awt.Color(102, 102, 102));
        listItem.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listItemValueChanged(evt);
            }
        });
        scrollItemList.setViewportView(listItem);

        javax.swing.GroupLayout leftPanelLayout = new javax.swing.GroupLayout(leftPanel);
        leftPanel.setLayout(leftPanelLayout);
        leftPanelLayout.setHorizontalGroup(
            leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrollItemList, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
        );
        leftPanelLayout.setVerticalGroup(
            leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(leftPanelLayout.createSequentialGroup()
                .addComponent(scrollItemList, javax.swing.GroupLayout.DEFAULT_SIZE, 226, Short.MAX_VALUE)
                .addContainerGap())
        );

        rightPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                rightPanelMouseEntered(evt);
            }
        });

        descrip.setEditable(false);
        descrip.setBackground(new java.awt.Color(204, 204, 204));
        descrip.setColumns(20);
        descrip.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        descrip.setForeground(new java.awt.Color(0, 153, 102));
        descrip.setLineWrap(true);
        descrip.setRows(5);
        descrip.setWrapStyleWord(true);
        scrollDesItem.setViewportView(descrip);

        imgPanel.setForeground(new java.awt.Color(130, 130, 130));

        javax.swing.GroupLayout imgPanelLayout = new javax.swing.GroupLayout(imgPanel);
        imgPanel.setLayout(imgPanelLayout);
        imgPanelLayout.setHorizontalGroup(
            imgPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 80, Short.MAX_VALUE)
        );
        imgPanelLayout.setVerticalGroup(
            imgPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 80, Short.MAX_VALUE)
        );

        spinCount.setModel(new javax.swing.SpinnerNumberModel(1, 1, 10, 1));
        spinCount.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinCountStateChanged(evt);
            }
        });

        btnBuy.setText("Get");
        btnBuy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuyActionPerformed(evt);
            }
        });

        priceCount.setForeground(new java.awt.Color(0, 102, 255));
        priceCount.setText("0 C");

        javax.swing.GroupLayout rightPanelLayout = new javax.swing.GroupLayout(rightPanel);
        rightPanel.setLayout(rightPanelLayout);
        rightPanelLayout.setHorizontalGroup(
            rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrollDesItem)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, rightPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(priceCount, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(spinCount, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnBuy, javax.swing.GroupLayout.DEFAULT_SIZE, 69, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, rightPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(imgPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(85, 85, 85))
        );
        rightPanelLayout.setVerticalGroup(
            rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rightPanelLayout.createSequentialGroup()
                .addComponent(imgPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollDesItem, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addGroup(rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spinCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuy)
                    .addComponent(priceCount)))
        );

        rightPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnBuy, priceCount, spinCount});

        lbTotalCoin.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lbTotalCoin.setForeground(new java.awt.Color(0, 102, 255));
        lbTotalCoin.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbTotalCoin.setText(" ");

        javax.swing.GroupLayout topPanelLayout = new javax.swing.GroupLayout(topPanel);
        topPanel.setLayout(topPanelLayout);
        topPanelLayout.setHorizontalGroup(
            topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(topPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbTotalCoin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        topPanelLayout.setVerticalGroup(
            topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(topPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbTotalCoin)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnOk.setText("OK");
        btnOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(topPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(leftPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(rightPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(161, 161, 161)
                .addComponent(btnOk, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(topPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(leftPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rightPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnOk)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkActionPerformed
        ClientFrame.getClientFrame().setEnabled(true);
        this.dispose();
    }//GEN-LAST:event_btnOkActionPerformed

    public void closeShop() {
        ClientFrame.getClientFrame().setEnabled(true);
        this.dispose();
    }

    private void btnBuyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuyActionPerformed
        if (selectedItem != null) {
            int count = (int) spinCount.getValue();
            if (ClientFrame.getClientFrame().getTotalCoint() < (itemPrice * count)) {
                JOptionPane.showMessageDialog(this, "Not enough coin.");
                return;
            }
            if (ClientFrame.getClientFrame().getMapItemOwn().containsKey(selectedItem.getId())) {
                if (ClientFrame.getClientFrame().getMapItemOwn().get(selectedItem.getId()) + count >= 100) {
                    JOptionPane.showMessageDialog(this, "Can not buy more than 99.");
                    return;
                }
            }
            int coinReduce = (itemPrice * count) * -1;
            ClientFrame.getClientFrame().sendMessage(CommonDefine.BOOM_GAME_ADD_ITEM + CommonDefine.SEPARATOR_KEY_VALUE + selectedItem.getId() + CommonDefine.SEPARATOR_KEY_VALUE + count);
            ClientFrame.getClientFrame().addCoin(coinReduce);
            ClientFrame.getClientFrame().updateMapItemOwn(selectedItem.getId(), count);
            updateCoint();
        }
    }//GEN-LAST:event_btnBuyActionPerformed

    private void listItemValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listItemValueChanged
        int index = listItem.getSelectedIndex();
        if (itemSelectedIndex != index) {
            itemSelectedIndex = index;
            selectedItem = listEquipment.get(itemSelectedIndex);
            if (selectedItem.getCategory() == ItemCategory.SHOP_ITEM.getId()) {
                btnBuy.setEnabled(true);
                spinCount.setEnabled(true);
            } else {
                btnBuy.setEnabled(false);
                spinCount.setEnabled(false);
            }
            repaintImg();
            descrip.setText(null);
            descrip.append("Name: " + selectedItem.getName());
            descrip.append(CommonDefine.BREAK_LINE);
            if (BoomGameClient.isBombItem(selectedItem.getId()) || BoomGameClient.isBomb(selectedItem.getId())) {
                descrip.append("Damage: " + selectedItem.getDamage());
                descrip.append(CommonDefine.BREAK_LINE);
                descrip.append("Horizontal Size: " + selectedItem.getHorizontalLen());
                descrip.append(CommonDefine.BREAK_LINE);
                descrip.append("Vertial Size: " + selectedItem.getVerticalLen());
                descrip.append(CommonDefine.BREAK_LINE);
                descrip.append("Square Size: " + selectedItem.getSquareLen());
                descrip.append(CommonDefine.BREAK_LINE);
                descrip.append("Recovery Ratio: " + selectedItem.getRecoverRatio());
                descrip.append(CommonDefine.BREAK_LINE);
            }
            descrip.append("Description: " + selectedItem.getDescrip());
            descrip.append(CommonDefine.BREAK_LINE);
            spinCount.setValue(1);
            itemPrice = selectedItem.getPrice();
            priceCount.setText(String.valueOf(itemPrice) + " C");
        }
    }//GEN-LAST:event_listItemValueChanged

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        ClientFrame.getClientFrame().setEnabled(true);
        this.dispose();
    }//GEN-LAST:event_formWindowClosing

    private void spinCountStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spinCountStateChanged
        int count = (int) spinCount.getValue();
        priceCount.setText(String.valueOf(itemPrice * count) + " C");
    }//GEN-LAST:event_spinCountStateChanged

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        repaintImg();
    }//GEN-LAST:event_formWindowActivated

    private void rightPanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rightPanelMouseEntered
        repaintImg();
    }//GEN-LAST:event_rightPanelMouseEntered

    private void repaintImg() {
        if (selectedItem != null) {
            Graphics g = imgPanel.getGraphics();
            g.setColor(new Color(240, 240, 240));
            g.fillRect(0, 0, imgPanel.getWidth(), imgPanel.getHeight());
            g.drawImage(ClientFrame.getClientFrame().getListImageBoom().get("way"), 0, 0, imgPanel.getWidth(), imgPanel.getHeight(), null);
            String key = "item_" + selectedItem.getId();
            if (BoomGameClient.isBombItem(selectedItem.getId())) {
                key = "bomb_" + BoomGameClient.getBombItem(selectedItem.getId());
            } else if (BoomGameClient.isBomb(selectedItem.getId())) {
                key = "bomb_" + selectedItem.getId();
            }
            int scale = 10;
            g.drawImage(ClientFrame.getClientFrame().getListImageBoom().get(key), scale, scale, imgPanel.getWidth() - 2 * scale, imgPanel.getHeight() - 2 * scale, null);
        }
    }

    private void updateCoint() {
        int coins = ClientFrame.getClientFrame().getTotalCoint();
        lbTotalCoin.setText("" + coins + " Coin");
    }

    private void initListItem() {
        if (ClientFrame.getClientFrame().getListEquipment().isEmpty()) {
            return;
        }
        listEquipment = ClientFrame.getClientFrame().getListEquipment();
        DefaultListModel<String> listModel = new DefaultListModel<>();
        for (int i = 0; i < listEquipment.size(); i++) {
            listModel.add(i, listEquipment.get(i).getName());
        }
        listItem.setModel(listModel);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuy;
    private javax.swing.JButton btnOk;
    private javax.swing.JTextArea descrip;
    private javax.swing.JPanel imgPanel;
    private javax.swing.JLabel lbTotalCoin;
    private javax.swing.JPanel leftPanel;
    private javax.swing.JList<String> listItem;
    private javax.swing.JLabel priceCount;
    private javax.swing.JPanel rightPanel;
    private javax.swing.JScrollPane scrollDesItem;
    private javax.swing.JScrollPane scrollItemList;
    private javax.swing.JSpinner spinCount;
    private javax.swing.JPanel topPanel;
    // End of variables declaration//GEN-END:variables
}
